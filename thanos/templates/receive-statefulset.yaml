{{ if .Values.receive.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "thanos.componentname" (list $ "receive") }}
  labels:
    app.kubernetes.io/name: {{ include "thanos.name" . }}
    helm.sh/chart: {{ include "thanos.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | replace "+" "_" }}
    app.kubernetes.io/component: receive
    {{- with .Values.receive.deploymentLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.receive.deploymentAnnotations }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.receive.replicaCount | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "thanos.name" . }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
      app.kubernetes.io/component: receive
{{- with .Values.receive.deploymentMatchLabels }}
      {{- toYaml . | nindent 6 }}
{{- end }}
  serviceName: {{ include "thanos.fullname" . }}-receive
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "thanos.name" . }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app.kubernetes.io/component: receive
      {{- with .Values.receive.labels }}
        {{- toYaml . | indent 8 }}
      {{- end }}
      {{- if or .Values.receive.annotations .Values.receive.metrics.annotations.enabled }}
      annotations:
        {{- with  .Values.receive.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.receive.metrics.annotations.enabled  }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.receive.http.port }}"
        {{- end }}
      {{- end }}
    spec:
      containers:
      - name: thanos-receive
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        {{- with .Values.receive.extraEnv }}
        {{- toYaml . | nindent 10 }}
        {{- end }}
        args:
          - "receive"
          - "--log.level={{ .Values.receive.logLevel }}"
          - "--log.format={{ .Values.receive.logFormat }}"
          - "--grpc-address=0.0.0.0:{{ .Values.receive.service.grpc.port }}"
          - "--http-address=0.0.0.0:{{ .Values.receive.service.http.port }}"
          - "--remote-write.address=0.0.0.0:{{ .Values.receive.service.remotewrite.port }}"
          - "--receive.replication-factor={{ .Values.receive.replicationFactor }}"
          - "--objstore.config-file=/etc/config/object-store.yaml"
          - "--tsdb.path={{ .Values.receive.mountPath }}"
          - "--label=receive_replica=\"{{ .Values.receive.receiveReplica }}\""
          - "--tsdb.retention={{ .Values.receive.retention}}"
          - "--receive.local-endpoint=127.0.0.1:{{ .Values.receive.service.grpc.port }}"
          #- --receive.hashrings-file=/var/lib/thanos-receive/hashrings.json
            {{- if .Values.receive.extraArgs }}
            {{- toYaml .Values.receive.extraArgs | nindent 10 }}
            {{- end }}
        {{- if .Values.receive.livenessProbe }}
        livenessProbe:
        {{- toYaml .Values.receive.livenessProbe | nindent 10 }}
        {{- end }}
        {{- if .Values.receive.readinessProbe }}
        readinessProbe:
        {{- toYaml .Values.receive.readinessProbe | nindent 10 }}
        {{- end }}
        ports:
          - containerPort: {{ .Values.receive.service.grpc.port}}
            name: grpc
          - containerPort: {{ .Values.receive.service.http.port}}
            name: http
          - containerPort: {{ .Values.receive.service.remotewrite.port}}
            name: remotewrite
        resources:
        {{- toYaml .Values.receive.resources | nindent 10 }}
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: data
            mountPath: /var/thanos/receive
            readOnly: false
          - name: config-volume
            mountPath: /etc/config
            readOnly: true
          - name: hashring-config
            mountPath: /var/lib/thanos-receive
          {{- if .Values.receive.certSecretName }}
          - mountPath: /etc/certs
            name: {{ .Values.receive.certSecretName }}
            readOnly: true
          {{- end }}
      terminationGracePeriodSeconds: 900
      volumes:
        - name: config-volume
          secret:
            {{- if .Values.objstoreSecretOverride }}
            secretName: "{{ .Values.objstoreSecretOverride }}"
            {{- else }}
            secretName: {{ include "thanos.fullname" . }}
            {{- end }}
        {{- if .Values.receive.certSecretName }}
        - name: {{ .Values.receive.certSecretName }}
          secret:
            defaultMode: 420
            secretName: {{ .Values.receive.certSecretName }}
        {{- end }}
        - configMap:
            name: hashring
          name: hashring-config
      {{- with .Values.receive.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.receive.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.receive.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        labels:
          #app.kubernetes.io/component: database-write-hashring
          app.kubernetes.io/instance: {{ include "thanos.componentname" (list $ "receive") }}
          app.kubernetes.io/name: {{ include "thanos.componentname" (list $ "receive") }}-data
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
    - metadata:
        labels:
          #app.kubernetes.io/component: database-write-hashring
          app.kubernetes.io/instance: {{ include "thanos.componentname" (list $ "receive") }}
          app.kubernetes.io/name: {{ include "thanos.componentname" (list $ "receive") }}-hashring-config
        name: {{ include "thanos.componentname" (list $ "receive") }}-hashring-config
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
{{- end -}}